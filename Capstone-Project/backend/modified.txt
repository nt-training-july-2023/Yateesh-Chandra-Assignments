modified

import axios from "axios";
import { useState } from "react";
import {useNavigate} from "react-router-dom"
import styles from "../css/Register.module.css"

function Register(){
    const [name, setName] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [confirmPassword, setConfirmPassword] = useState("");
    const [phoneNumber, setPhoneNumber] = useState("");
    const [showPassword, setShowPassword] = useState(false);
    const [showConfirmPassword, setShowConfirmPassword] = useState(false);
    const [emailError, setEmailError] = useState(null);
    const navigate = useNavigate();


    const togglePasswordVisibility = () => 
    {
        setShowPassword(!showPassword);
        
    };

    const toggleConfirmPasswordVisibility = () => 
    {
            setShowConfirmPassword(!showConfirmPassword);
    };

    const handleFormSubmit = async(event) => {
        event.preventDefault();

        if(!name.trim()){
            setErrorFor(document.getElementById("name"),"User name can not be empty..!");
            console.log("Username cannot be null..!");
            // return;
        }
        else{
            setSuccessFor(document.getElementById('name'));
        }

        if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)){
            setErrorFor(document.getElementById("email"),"Please enter Company email id..!");
            console.log("Email Id is not valid..!");
            // return;
        }
        else{
            setSuccessFor(document.getElementById('email'));
            // return;
        }

        if(password.length<8){
            setErrorFor(document.getElementById("password"),"Password must be atleast 8 characters..!");
            console.log("Password is too short");
            return;
        }
        else{
            setSuccessFor(document.getElementById('password'));
            // return;
        }

        if (password !== confirmPassword) {
            setErrorFor(document.getElementById("confirmPassword"),"Passwords did not match..!");
            console.log("Unmatched passwords");
            // return;
        }
        else{
            setSuccessFor(document.getElementById('confirmPassword'));
        }
    
        
        if (!/^(\d{10})$/.test(phoneNumber)) {
            setErrorFor(document.getElementById("phoneNumber"), "Please Enter a valid 10 digit number..!");
            console.log("Please enter a valid 10-digit phone number");
            // return;
        }
        else{
            setSuccessFor(document.getElementById('phoneNumber'));
        }       
        
        try{
            await axios.post("http://localhost:8082/api/v1/user/save",{
                name : name,
                email : email,
                password: password,
                phoneNumber : phoneNumber,
            });

            setName("");
            setEmail("");
            setPassword("");
            setConfirmPassword("");
            setPhoneNumber("");
            setSuccessFor(document.getElementById('name'));
            setSuccessFor(document.getElementById('email'));
            setSuccessFor(document.getElementById('password'));
            setSuccessFor(document.getElementById('confirmPassword'));

            setSuccessFor("User Registration Successful..!");
            console.log("Congratulations. Now, you are a user.!");
        }
        catch(err){

            const msg = "duplicate key value violates unique constraint"
            if(err.response && err.response.data && err.response.data.message){
                const errorMessage = err.response.data.message;
                if(errorMessage.includes(msg)){
                    setErrorFor(document.getElementById('email'), "You are already a member..! Kindly Login..!");
                }
            }
            else{
                setErrorFor(document.getElementById('form'), "An error occurred during registration.");
        }
        console.log(err);
        }
    };

    const setErrorFor = (input, message) => {
        const formControl = input.parentElement;
        const small = formControl.querySelector('small');
        formControl.className = 'form-control error';
        small.innerText = message;
    }

    const setSuccessFor= (input) =>{
        const formControl = input.parentElement;
        formControl.className = 'form-control success';
    };

    
    const isEmail = (email) => {
        const emailRegex = !/^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    };
    
    const isPhoneNumberValid = (phoneNumber) => {
        return !/^(\d{10})$/.test(phoneNumber);
    }

    return (
        <div>
            <div className={styles.container}>
                <div className={styles.header}>
                    <h1>User Registration</h1>
                    <form id="form" className={styles.form} onSubmit={handleFormSubmit}>
                        <div className={`${styles.formControl} ${name ? styles.success : styles.error}`}>
                            <label htmlFor="name">User Name</label>
                            <input
                                type="text"
                                id="name"
                                placeholder="Enter Name"
                                value={name}
                                onChange={(event) => {
                                    setName(event.target.value);
                                }}
                            />
                            <small>User name cannot be empty..!</small>
                        </div>
    
                        <div className={`${styles.formControl} ${email ? (isEmail(email) ? styles.success : styles.error) : ''}`}>
                            <label htmlFor="email">Email</label>
                            <input
                                type="email"
                                className={styles.formControl}
                                id="email"
                                placeholder="Enter Email"
                                value={email}
                                onChange={(event) => {
                                    setEmail(event.target.value);
                                    setEmailError(null);
                                }}
                            />
                            {emailError && <div className={styles.invalidFeedback}>{emailError}</div>}
                            <small>Not a Valid Mail</small>
                        </div>

                        <div className={`styles.form-control ${password.length >= 8 ? 'success' : 'error'}`}>
                            <label htmlFor="password">Password</label>
                            <div className="styles.input-group">
                                <input
                                    type={showPassword ? "text" : "password"}
                                    id="password"
                                    placeholder="Enter Password"
                                    value={password}
                                    onChange={(event) => {
                                        setPassword(event.target.value);
                                    }}
                                />
                                <div className="styles.input-group-append">
                                    <button type="button" onClick={togglePasswordVisibility}>
                                        {showPassword ? "Hide" : "Show"}
                                    </button>
                                </div>
                            </div>
                            <small>Password must be at least 8 characters</small>
                        </div>

                        <div className={`styles.form-control ${confirmPassword === password ? 'success' : 'error'}`}>
                            <label htmlFor="password2">Confirm Password</label>
                            <div className="styles.input-group">
                                <input
                                    type={showConfirmPassword ? "text" : "password"}
                                    className="styles.form-control"
                                    id="confirmPassword"
                                    placeholder="Confirm Password"
                                    value={confirmPassword}
                                    onChange={(event) => {
                                        setConfirmPassword(event.target.value);
                                    }}
                                />
                                <div className="styles.input-group-append">
                                    <button
                                        type="button"
                                        onClick={toggleConfirmPasswordVisibility}
                                    >
                                        {showConfirmPassword ? "Hide" : "Show"}
                                    </button>
                                </div>
                            </div>
                            <small>Passwords do not match</small>
                        </div>

                        <div className={`styles.form-control ${isPhoneNumberValid(phoneNumber) ? 'success' : 'error'}`}>
                            <label htmlFor="phoneNumber">Phone Number</label>
                            <input
                                type="number"
                                className="styles.form-control"
                                id="phoneNumber"
                                placeholder="Enter Mobile"
                                value={phoneNumber}
                                onChange={(event) => {
                                    setPhoneNumber(event.target.value);
                                }}
                            />
                            <small>Please enter a valid 10 digit number..!</small>
                        </div>
                     
                        <button
                            type="submit"
                            disabled={!name || !password || !confirmPassword || !phoneNumber}
                        >
                            Save
                        </button>
                        <button type="button" onClick={() => navigate("/")}>
                            Go Home
                        </button>
                    </form>
                </div>
            </div>
        </div>
    );
    
}

export default Register;